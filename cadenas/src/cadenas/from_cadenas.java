/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cadenas;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Luis Zambra
 */
public class from_cadenas extends javax.swing.JFrame {

    /**
     * Creates new form from_cadenas
     */
    public from_cadenas() {
        initComponents();
        
          
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_manejocadena = new javax.swing.JLabel();
        lbl_texto = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_texto = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        lbl_longitud = new javax.swing.JLabel();
        lbl_palabras = new javax.swing.JLabel();
        lbl_primeraletra = new javax.swing.JLabel();
        lbl_ultimaletra = new javax.swing.JLabel();
        lbl_letracentral = new javax.swing.JLabel();
        lbl_primerapalabra = new javax.swing.JLabel();
        lbl_palabracentral = new javax.swing.JLabel();
        lbl_ultimapalabra = new javax.swing.JLabel();
        lbl_clavemurcielago = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_respuesta1 = new javax.swing.JLabel();
        lbl_respuesta2 = new javax.swing.JLabel();
        lbl_respuesta3 = new javax.swing.JLabel();
        lbl_respuesta4 = new javax.swing.JLabel();
        lbl_respuesta5 = new javax.swing.JLabel();
        lbl_respuesta6 = new javax.swing.JLabel();
        lbl_respuesta7 = new javax.swing.JLabel();
        lbl_respuesta8 = new javax.swing.JLabel();
        lbl_respuesta9 = new javax.swing.JLabel();
        lbl_respuesta10 = new javax.swing.JLabel();
        lbl_respuesta11 = new javax.swing.JLabel();
        lbl_respuesta12 = new javax.swing.JLabel();
        lbl_respuesta13 = new javax.swing.JLabel();
        lbl_respuesta14 = new javax.swing.JLabel();
        lbl_respuesta15 = new javax.swing.JLabel();
        lbl_respuesta16 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_abrir = new javax.swing.JMenuItem();
        menu_guardar = new javax.swing.JMenuItem();
        menu_guardarcomo = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menu_copiar = new javax.swing.JMenuItem();
        menu_cortar = new javax.swing.JMenuItem();
        menu_pegar = new javax.swing.JMenuItem();
        menu_buscar = new javax.swing.JMenuItem();
        menu_reemplazar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PROGRAMACION II  --- LEZP");

        lbl_manejocadena.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lbl_manejocadena.setText("MANEJO DE CADENAS");

        lbl_texto.setText("Ingrese un texto o abra un archivo.");

        txt_texto.setColumns(20);
        txt_texto.setRows(5);
        jScrollPane1.setViewportView(txt_texto);

        jButton1.setText("Procesar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lbl_longitud.setText("Longitud del texto.........");

        lbl_palabras.setText("Total de palabras............");

        lbl_primeraletra.setText("Primera letra del texto....");

        lbl_ultimaletra.setText("Última letra del texto.....");

        lbl_letracentral.setText("Letra central del texto...");

        lbl_primerapalabra.setText("Primera palabra...............");

        lbl_palabracentral.setText("Palabra central...............");

        lbl_ultimapalabra.setText("Ultima palabra..................");

        lbl_clavemurcielago.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lbl_clavemurcielago.setText("TRADUCCIÓN A CLAVE MURCIELAGO");

        jLabel1.setText("Repeticiones de  \"A\", \"a\" ó \"á\"");

        jLabel2.setText("Repeticiones de  \"E\", \"e\" ó \"é\"");

        jLabel3.setText("Repeticiones de  \"I\", \"i\" ó \"í\"");

        jLabel4.setText("Repeticiones de  \"O\", \"o\" ó \"ó\"");

        jLabel5.setText("Repeticiones de  \"U\", \"u\" ó \"ú\"");

        jLabel6.setText("Palabras con cantidad de caracteres par.");

        jLabel7.setText("Palabras con cantidad de caracteres impar.");

        lbl_respuesta16.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lbl_respuesta16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jMenu1.setText("Archivo");

        menu_abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_abrir.setText("Abrir");
        menu_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_abrirActionPerformed(evt);
            }
        });
        jMenu1.add(menu_abrir);

        menu_guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_guardar.setText("Guardar");
        menu_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_guardarActionPerformed(evt);
            }
        });
        jMenu1.add(menu_guardar);

        menu_guardarcomo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
        menu_guardarcomo.setText("Guardar como ");
        menu_guardarcomo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_guardarcomoActionPerformed(evt);
            }
        });
        jMenu1.add(menu_guardarcomo);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        menu_copiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_copiar.setText("Copiar");
        menu_copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_copiarActionPerformed(evt);
            }
        });
        jMenu2.add(menu_copiar);

        menu_cortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_cortar.setText("Cortar");
        menu_cortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_cortarActionPerformed(evt);
            }
        });
        jMenu2.add(menu_cortar);

        menu_pegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_pegar.setText("Pegar");
        menu_pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_pegarActionPerformed(evt);
            }
        });
        jMenu2.add(menu_pegar);

        menu_buscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_buscar.setText("Buscar");
        menu_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_buscarActionPerformed(evt);
            }
        });
        jMenu2.add(menu_buscar);

        menu_reemplazar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_reemplazar.setText("Reemplazar");
        menu_reemplazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_reemplazarActionPerformed(evt);
            }
        });
        jMenu2.add(menu_reemplazar);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_manejocadena, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(241, 241, 241))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_texto, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(182, 182, 182)
                                        .addComponent(lbl_clavemurcielago))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(lbl_letracentral, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lbl_primeraletra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lbl_palabras, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lbl_longitud, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lbl_ultimaletra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lbl_respuesta1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lbl_respuesta2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lbl_respuesta3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lbl_respuesta4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lbl_respuesta5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbl_primerapalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lbl_respuesta6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbl_palabracentral, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lbl_respuesta7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(lbl_ultimapalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lbl_respuesta8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(10, 10, 10))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_respuesta9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_respuesta11, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_respuesta10, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_respuesta13, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_respuesta12, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_respuesta15, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_respuesta14, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lbl_respuesta16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbl_manejocadena, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_texto, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_respuesta1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_longitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)
                                .addComponent(lbl_respuesta9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_respuesta2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_palabras, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbl_respuesta10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_respuesta3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_primeraletra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addComponent(lbl_respuesta11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbl_respuesta4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(lbl_ultimaletra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel4)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbl_respuesta5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(lbl_letracentral, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel5))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_respuesta12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbl_respuesta13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_respuesta6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbl_primerapalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lbl_respuesta14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_respuesta7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_palabracentral, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbl_respuesta15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_ultimapalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lbl_respuesta8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_clavemurcielago, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_respuesta16, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    
    
    
    
    
    private void menu_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_abrirActionPerformed
        // TODO add your handling code here:
      JFileChooser fileChooser = new JFileChooser();
    
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de texto (.txt)", "txt");
    fileChooser.setFileFilter(filter);
    
    int result = fileChooser.showOpenDialog(this);
    
    if (result == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        
        try {
            BufferedReader reader = new BufferedReader(new FileReader(selectedFile));
            String line;
            StringBuilder fileContent = new StringBuilder();

            while ((line = reader.readLine()) != null) {
                fileContent.append(line).append("\n");
            }

            reader.close();

            txt_texto.setText(fileContent.toString());  // Mostrar contenido en el JTextArea
            archivoActual = selectedFile;  // Establecer el archivo actual
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
        
        
        
    }//GEN-LAST:event_menu_abrirActionPerformed

    private File archivoActual = null;
    
    private void menu_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_guardarActionPerformed
        // TODO add your handling code here:
         if (archivoActual != null) {
        guardarArchivo(archivoActual);
    } else {
        JFileChooser fileChooser = new JFileChooser();
        
        int result = fileChooser.showSaveDialog(this);
        
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            guardarArchivo(selectedFile);
        }
    }
       
    
    
    
    }//GEN-LAST:event_menu_guardarActionPerformed

    private void guardarArchivo(File archivo) {
    try {
        FileWriter writer = new FileWriter(archivo);
        String content = txt_texto.getText();
        writer.write(content);
        writer.close();
        archivoActual = archivo;
    } catch (IOException e) {
        e.printStackTrace();
    }
}
    
    
    
    
    
    
    
    
    private void menu_guardarcomoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_guardarcomoActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fileChooser = new JFileChooser();
    
    int result = fileChooser.showSaveDialog(this);
    
    if (result == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        
        try {
            FileWriter writer = new FileWriter(selectedFile);
            
            // Obtener el contenido del JTextArea
            String content = txt_texto.getText();
            
            // Escribir el contenido en el archivo
            writer.write(content);
            
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_menu_guardarcomoActionPerformed

    private void menu_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_buscarActionPerformed
        // TODO add your handling code here:
         String searchText = JOptionPane.showInputDialog(this, "Buscar:");
    if (searchText != null) {
        String content = txt_texto.getText();
        int startIndex = 0;
        int occurrences = 0;
        
        while (startIndex != -1) {
            startIndex = content.indexOf(searchText, startIndex);
            if (startIndex != -1) {
                txt_texto.setCaretPosition(startIndex);
                txt_texto.setSelectionStart(startIndex);
                txt_texto.setSelectionEnd(startIndex + searchText.length());
                startIndex += searchText.length();
                occurrences++;
            }
        }
        
        if (occurrences == 0) {
            JOptionPane.showMessageDialog(this, "Texto no encontrado.");
        }
    }
    }//GEN-LAST:event_menu_buscarActionPerformed

    private void menu_reemplazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_reemplazarActionPerformed
        // TODO add your handling code here:
          String searchText = JOptionPane.showInputDialog(this, "Buscar:");
    if (searchText != null) {
        String replaceText = JOptionPane.showInputDialog(this, "Reemplazar con:");
        if (replaceText != null) {
            String content = txt_texto.getText();
            String newContent = replaceAllOccurrences(content, searchText, replaceText);
            txt_texto.setText(newContent);
        }
    };
    }//GEN-LAST:event_menu_reemplazarActionPerformed

    private String replaceAllOccurrences(String originalText, String searchText, String replaceText) {
    StringBuilder result = new StringBuilder();
    int startIndex = 0;
    int foundIndex;

    while ((foundIndex = originalText.indexOf(searchText, startIndex)) != -1) {
        result.append(originalText, startIndex, foundIndex);
        result.append(replaceText);
        startIndex = foundIndex + searchText.length();
    }

    result.append(originalText, startIndex, originalText.length());

    return result.toString();
}
    
    
    
    
    
    private void menu_pegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_pegarActionPerformed
        // TODO add your handling code here:
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
    Transferable contents = clipboard.getContents(null);

    if (contents != null && contents.isDataFlavorSupported(DataFlavor.stringFlavor)) {
        try {
            // Obtener el contenido del portapapeles como texto
            String clipboardText = (String) contents.getTransferData(DataFlavor.stringFlavor);

            // Pegar el contenido en el JTextArea
            int caretPosition = txt_texto.getCaretPosition();
            txt_texto.insert(clipboardText, caretPosition);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
        
    }//GEN-LAST:event_menu_pegarActionPerformed

    private void menu_cortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_cortarActionPerformed
        // TODO add your handling code here:
        String selectedText = txt_texto.getSelectedText();

    if (selectedText != null && !selectedText.isEmpty()) {
        // Copiar el texto al portapapeles
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection selection = new StringSelection(selectedText);
        clipboard.setContents(selection, null);

        // Eliminar el texto seleccionado del JTextArea
        int start = txt_texto.getSelectionStart();
        int end = txt_texto.getSelectionEnd();
        txt_texto.replaceRange("", start, end);
    }
    }//GEN-LAST:event_menu_cortarActionPerformed

    private void menu_copiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_copiarActionPerformed
        // TODO add your handling code here:
         String selectedText = txt_texto.getSelectedText();

    if (selectedText != null && !selectedText.isEmpty()) {
        // Copiar el texto al portapapeles
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection selection = new StringSelection(selectedText);
        clipboard.setContents(selection, null);
    }
        
        
    }//GEN-LAST:event_menu_copiarActionPerformed

    private void traducirTexto() {
    String textoOriginal = txt_texto.getText();
    String correspondencia = "abcdefghijklmnñopqrstuvwxyz";
    String reemplazos = "7b3d5f8h4jk60nñ9pq2st1vwxyz";

    StringBuilder textoTraducido = new StringBuilder();

    for (char c : textoOriginal.toCharArray()) {
        int index = correspondencia.indexOf(Character.toLowerCase(c));
        if (index != -1) {
            char reemplazo = reemplazos.charAt(index);
            if (Character.isUpperCase(c)) {
                textoTraducido.append(Character.toUpperCase(reemplazo));
            } else {
                textoTraducido.append(reemplazo);
            }
        } else {
            textoTraducido.append(c);
        }
    }

    lbl_respuesta16.setText(textoTraducido.toString());
}


    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        traducirTexto();
        
       String text = txt_texto.getText();
        int longitud = text.length();
        lbl_respuesta1.setText(String.valueOf(longitud));

        // Total de palabras
        String text1 = txt_texto.getText();
        String[] palabras = text1.split("\\s+");
        int totalPalabras = palabras.length;
        lbl_respuesta2.setText(String.valueOf(totalPalabras));

        // Primera letra del texto
        String text2 = txt_texto.getText();

        if (!text2.isEmpty()) {
            char primeraLetra = text2.charAt(0);
            lbl_respuesta3.setText(String.valueOf(primeraLetra));
        } else {
            lbl_respuesta3.setText("Texto vacío");
        }

        // Ultima palabra del texto
        String text3 = txt_texto.getText();

        if (!text3.isEmpty()) {
            char ultimaLetra = text3.charAt(text3.length() - 1);
            lbl_respuesta4.setText(String.valueOf(ultimaLetra));
        } else {
            lbl_respuesta4.setText("Texto vacío");
        }

        // Letra central del texto
        String text4 = txt_texto.getText();

        if (!text4.isEmpty()) {
            int longitud1 = text4.length();
            int posicionCentral = longitud1 / 2;

            char letraCentral = text4.charAt(posicionCentral);
            lbl_respuesta5.setText(String.valueOf(letraCentral));
        } else {
            lbl_respuesta5.setText("Texto vacío");
        }

        // Primera palabra
        String text5 = txt_texto.getText();

        if (!text5.isEmpty()) {
            String[] palabras1 = text5.split("\\s+");
            if (palabras1.length > 0) {
                String primeraPalabra1 = palabras1[0];
                lbl_respuesta6.setText(primeraPalabra1);
            } else {
                lbl_respuesta6.setText("No hay palabras");
            }
        } else {
            lbl_respuesta6.setText("Texto vacío");
        }

        // Palabra central
        String text6 = txt_texto.getText();

        if (!text6.isEmpty()) {
            String[] palabras2 = text6.split("\\s+");
            int totalPalabras2 = palabras2.length;

            if (totalPalabras2 > 0) {
                int posicionCentral = totalPalabras2 / 2;
                String palabraCentral = palabras2[posicionCentral];
                lbl_respuesta7.setText(palabraCentral);
            } else {
                lbl_respuesta7.setText("No hay palabras");
            }
        } else {
            lbl_respuesta7.setText("Texto vacío");
        }

        // Ultima palabra
        String text7 = txt_texto.getText();

        if (!text7.isEmpty()) {
            String[] palabras3 = text7.split("\\s+");
            int totalPalabras3 = palabras3.length;

            if (totalPalabras3 > 0) {
                String ultimaPalabra3 = palabras3[totalPalabras - 1];
                lbl_respuesta8.setText(ultimaPalabra3);
            } else {
                lbl_respuesta8.setText("No hay palabras");
            }
        } else {
            lbl_respuesta8.setText("Texto vacío");
        }

        // Contar repeticiones de "A", "a" y "á" en el texto
        String text8 = txt_texto.getText();

        int contadorA = 0;

        for (int i = 0; i < text8.length(); i++) {
            char caracter = text8.charAt(i);
            if (caracter == 'A' || caracter == 'a' || caracter == 'á' || caracter == 'Á') {
                contadorA++;
            }
        }

        lbl_respuesta9.setText(String.valueOf(contadorA));
        
        // Contar repeticiones de "E", "e" y "é" en el texto
        String text9 = txt_texto.getText();

        int contadorE = 0;

        for (int i = 0; i < text9.length(); i++) {
            char caracter1 = text9.charAt(i);
            if (caracter1 == 'E' || caracter1 == 'e' || caracter1 == 'é' || caracter1 == 'É') {
                contadorE++;
            }
        }

        lbl_respuesta10.setText(String.valueOf(contadorE));

        // Contar repeticiones de "I", "i" y "í" en el texto
        String text10 = txt_texto.getText();

        int contadorI = 0;

        for (int i = 0; i < text10.length(); i++) {
            char caracter2 = text10.charAt(i);
            if (caracter2 == 'I' || caracter2 == 'i' || caracter2 == 'í' || caracter2 == 'Í') {
                contadorI++;
            }
        }

        lbl_respuesta11.setText(String.valueOf(contadorI));

        // Contar repeticiones de "O", "o" y "ó" en el texto
        String text11 = txt_texto.getText();

        int contadorO = 0;

        for (int i = 0; i < text11.length(); i++) {
            char caracter3 = text11.charAt(i);
            if (caracter3 == 'O' || caracter3 == 'o' || caracter3 == 'ó' || caracter3 == 'Ó') {
                contadorO++;
            }
        }

        lbl_respuesta12.setText(String.valueOf(contadorO));

        // Contar repeticiones de "U", "u" y "ú" en el texto
        String text12 = txt_texto.getText();

        int contadorU = 0;

        for (int i = 0; i < text12.length(); i++) {
            char caracter4 = text12.charAt(i);
            if (caracter4 == 'U' || caracter4 == 'u' || caracter4 == 'ú' || caracter4 == 'Ú') {
                contadorU++;
            }
        }

        lbl_respuesta13.setText(String.valueOf(contadorU));

        // Contar palabras con cantidad de caracteres par en el texto
        String text13 = txt_texto.getText();
        String[] palabras5 = text13.split("\\s+");
        int contadorPalabrasPar = 0;

        for (String palabra5 : palabras5) {
            if (palabra5.length() % 2 == 0) {
                contadorPalabrasPar++;
            }
        }

        lbl_respuesta14.setText(String.valueOf(contadorPalabrasPar));

        // Contar palabras con cantidad de caracteres impar en el texto
        String text14 = txt_texto.getText();
        String[] palabras6 = text14.split("\\s+");

        int contadorPalabrasImpar = 0;

        for (String palabra6 : palabras6) {
            if (palabra6.length() % 2 != 0) {
                contadorPalabrasImpar++;
            }
        }

        lbl_respuesta15.setText(String.valueOf(contadorPalabrasImpar));
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(from_cadenas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(from_cadenas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(from_cadenas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(from_cadenas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new from_cadenas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_clavemurcielago;
    private javax.swing.JLabel lbl_letracentral;
    private javax.swing.JLabel lbl_longitud;
    private javax.swing.JLabel lbl_manejocadena;
    private javax.swing.JLabel lbl_palabracentral;
    private javax.swing.JLabel lbl_palabras;
    private javax.swing.JLabel lbl_primeraletra;
    private javax.swing.JLabel lbl_primerapalabra;
    private javax.swing.JLabel lbl_respuesta1;
    private javax.swing.JLabel lbl_respuesta10;
    private javax.swing.JLabel lbl_respuesta11;
    private javax.swing.JLabel lbl_respuesta12;
    private javax.swing.JLabel lbl_respuesta13;
    private javax.swing.JLabel lbl_respuesta14;
    private javax.swing.JLabel lbl_respuesta15;
    private javax.swing.JLabel lbl_respuesta16;
    private javax.swing.JLabel lbl_respuesta2;
    private javax.swing.JLabel lbl_respuesta3;
    private javax.swing.JLabel lbl_respuesta4;
    private javax.swing.JLabel lbl_respuesta5;
    private javax.swing.JLabel lbl_respuesta6;
    private javax.swing.JLabel lbl_respuesta7;
    private javax.swing.JLabel lbl_respuesta8;
    private javax.swing.JLabel lbl_respuesta9;
    private javax.swing.JLabel lbl_texto;
    private javax.swing.JLabel lbl_ultimaletra;
    private javax.swing.JLabel lbl_ultimapalabra;
    private javax.swing.JMenuItem menu_abrir;
    private javax.swing.JMenuItem menu_buscar;
    private javax.swing.JMenuItem menu_copiar;
    private javax.swing.JMenuItem menu_cortar;
    private javax.swing.JMenuItem menu_guardar;
    private javax.swing.JMenuItem menu_guardarcomo;
    private javax.swing.JMenuItem menu_pegar;
    private javax.swing.JMenuItem menu_reemplazar;
    private javax.swing.JTextArea txt_texto;
    // End of variables declaration//GEN-END:variables
}
